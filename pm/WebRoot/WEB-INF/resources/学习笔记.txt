

Spring3不能使用HibernateTemplate，因此只需要注入SessionFactory进行数据库操作。

http://blog.csdn.net/liuyuxing19877/article/details/7241364

JPA 实体 生命周期
1、瞬时态（新建态）	瞬时态是刚刚new出来的实体对象
2、持久态（受控态）	持久态是从数据库中查找出来的实体对象，session没有关闭
3、游离态			游离态是从数据库中查找出来的实体对象，session已经关闭
4、删除态			删除态是删除了数据库后的实体对象

一个项目只需要一个SessionFactory就够了。一个SessionFactory连接一个数据库。产生多个session
session生命周期极其短暂，事务结束就没有了。



典型的元模型结构可以描述为：实例层、模型层、元模型层和元元模型层。每一层描述如下[22]：
1．信息层（information layer）
信息是由我们希望描述的数据组成，这些数据通常是一些用户数据(user data)，主要职责是描述信息领域中的详细信息。
2．模型层（model layer）
模型层是由元数据组成，元数据是描述信息层的数据，元数据的集合被称作为模型。
模型层的主要职责是为描述信息层而定义的一种“抽象语言”(即没有具体语法或符号的语言)。信息层的数据，即用户数据，是模型层的一个实例。
3．元模型层（metamodel layer）
元模型层是由元一元数据组成，元一元数据定义了元数据的结构和语义，元一元数据的集合被称作为元模型。元模型层的主要职责是为了描述模型层而定义的一种“抽象语言”，是对模型层的进一步抽象。也就是说，模型层描述的内容通常要比元模型层描述的内容丰富、详细。一个模型是元模型的一个实例。数据词典中的元数据是对数据模型的描述[23]。
4．元元模型层（meta-metamodel layer）
元元模型层是由元元数据的结构和语义的描述组成，这层的主要职责是为了描述元模型而定义的一种“抽象语言”。元元模型的定义要比元模型更加抽象、简洁。一个元元模型可以定义多个元模型，而每个元模型也可以与多个元元模型相关联。通常所说的相关联的元模型和元元模型共享同一个设计原理和构造，这也不是绝对的准则。每一层都需要维护自己设计的完整性。一个元模型是元元模型的一个实例。

